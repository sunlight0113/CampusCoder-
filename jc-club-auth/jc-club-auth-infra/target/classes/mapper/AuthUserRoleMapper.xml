<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lunsir.auth.infra.mapper.AuthUserRoleMapper">

    <resultMap type="com.lunsir.auth.infra.entity.AuthUserRole" id="AuthUserRoleMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="roleId" column="role_id" jdbcType="INTEGER"/>
        <result property="createdBy" column="created_by" jdbcType="VARCHAR"/>
        <result property="createdTime" column="created_time" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="VARCHAR"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="isDeleted" column="is_deleted" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into jc-club.auth_user_role(user_id, role_id, created_by, created_time, update_by, update_time,
        is_deleted)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.roleId}, #{entity.createdBy}, #{entity.createdTime}, #{entity.updateBy},
            #{entity.updateTime}, #{entity.isDeleted})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into jc-club.auth_user_role(user_id, role_id, created_by, created_time, update_by, update_time,
        is_deleted)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.roleId}, #{entity.createdBy}, #{entity.createdTime}, #{entity.updateBy},
            #{entity.updateTime}, #{entity.isDeleted})
        </foreach>
        on duplicate key update
        user_id = values(user_id) , role_id = values(role_id) , created_by = values(created_by) , created_time =
        values(created_time) , update_by = values(update_by) , update_time = values(update_time) , is_deleted =
        values(is_deleted)
    </insert>

</mapper>

